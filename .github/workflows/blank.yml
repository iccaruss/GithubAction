# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 17

#      - name: Unit tests
#        run: ./gradlew test # use can use another command to run juni test like: ./gradlew testDebugUnitTest
#        continue-on-error: false # IMPORTANT: allow pipeline to continue to Android Test Report step

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace

      - name: Publish Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "**/test-results/**/*.xml"

#      - name: Make Unit test report
#        uses: doanpt/AndroidTestReportAction@v1.0
#        if: ${{ always() }} # IMPORTANT: run Android Test Report regardless

      - name: Prevent merge on test failure
        if: failure()
        run: |
          echo "Unit tests failed. Merging is not allowed."
          exit 1
